name: CI
# Run on master, tags, or any pull request
on:
  schedule:
    - cron: "0 2 * * *" # Daily at 2 AM UTC (8 PM CST)
  push:
    branches: [master]
    tags: ["*"]
  pull_request:

permissions: {}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1" # Latest Release
        os:
          - ubuntu-latest
        arch:
          - x64
          - x86
        exclude:
          # Test 32-bit only on Linux
          - os: macOS-latest
            arch: x86
          - os: windows-latest
            arch: x86
        include:
          - os: ubuntu-latest
            version: 1.6
            arch: x64
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        env:
          DATADEPS_ALWAYS_ACCEPT: true
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
  docs:
    name: Documentation
    permissions:
      actions: write
      contents: write
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: julia-actions/setup-julia@v2
        with:
          version: "1"
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        shell: julia --color=yes --project=docs {0}
        run: |
          using Pkg
          Pkg.develop(PackageSpec(path=pwd()))
          Pkg.instantiate()
      - name: Build and deploy
        run: julia --color=yes --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          DATADEPS_ALWAYS_ACCEPT: true
